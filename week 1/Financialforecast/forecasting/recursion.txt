Recursion is when a function calls itself to solve smaller pieces of the same problem. It helps by breaking a big problem into smaller, more manageable subproblems.

Eg. Finding factorial of a number

A recursive function works by having:

   A base case that stops the recursion when a simple condition is met.
   A step where the function calls itself repeatedly until it reaches the base case.

Analysis:
The time complexity of the recursive algorithm is O(n).

Optimization:
Recursive solutions can be made more efficient using memoization. Memoization means storing the results of subproblems so that if the same problem comes up again, the program can reuse the stored result instead of recalculating it. 